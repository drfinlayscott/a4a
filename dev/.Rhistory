sum(e1, na.rm=T) + sum(e2, na.rm=T)  
}
#)
#==============================================================================
# a4a5
#==============================================================================
setMethod("a4a5", c("FLStock", "FLIndex"), 
function(stk, idx, hessian=FALSE) {
# data
cth <- catch.n(stk)
flqini <- FLQuant(NA, dimnames=dimnames(cth))
Cmaxage <- stk@range['max']
Cminage <- stk@range['min'] 
Cnages <- Cmaxage-Cminage+1
Cnyrs <- stk@range['maxyear']-stk@range['minyear']+1
Cageidx <- 1:Cnages
Cyrsidx <- 1:Cnyrs
Cayobs <- FLCohort(cth)
flcini <- FLCohort(NA, dimnames=dimnames(Cayobs))
May <- FLCohort(m(stk))
Iayobs <- FLCohort(index(idx))
Inages <- idx@range['max']-idx@range['min']+1
# To subset the catch matrix matching the index
Cdnms <- dimnames(Cayobs)
Idnms <- dimnames(Iayobs)
Iageidx <- match(Idnms[[1]], Cdnms[[1]])
Ichtidx <- match(Idnms[[2]], Cdnms[[2]])
# starting values
aE <- floor(Cnages/3)
Fyini <- rep(0.5, Cnyrs)
Ryini <- log(cth[1]/(0.1*(1-exp(-1)))) #M0=0.9 F0=0.1
alpha <- floor(Cnages/3)
beta <- floor(Cnages/3)
par <- c(aE, Fyini, Ryini, alpha, beta)
# bounds - WARNING transformation on pars may require adjustement
low <- c(stk@range['min'], rep(1e-10, Cnyrs), log(rep(1e-10, Cnyrs)), stk@range['min'], stk@range['min'])
upp <- c(stk@range['max'], rep(2, Cnyrs), log(rep(Inf, Cnyrs)), stk@range['max'], stk@range['max'])
#ox <- optimx(par, fobj, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Iageidx=Iageidx, Ichtidx=Ichtidx, parscale=rep(1,4), method='nlminb', lower=low, upper=upp, hessian=FALSE, itnmax=1000) 
flcini=flcini@.Data[,,1,1,1,1, drop=TRUE]
Cayobs=Cayobs@.Data[,,1,1,1,1, drop=TRUE]
Iayobs=Iayobs@.Data[,,1,1,1,1, drop=TRUE]
May=May@.Data[,,1,1,1,1, drop=TRUE]
nlminb(par, fobj3, hessian=FALSE, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cminage=Cminage, Cmaxage=Cmaxage, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Iageidx=Iageidx, Ichtidx=Ichtidx, lower=low, upper=upp, control=list(iter.max=10000, eval.max=10000)) 
}
)
debug(fobj3)
a4a5(stck,tun[[2]])
n
alpha
beta
par
par[Cnages+1]
Fy <- par[1+Cyrsidx]
Fy
Fy <- par[1+Cyrsidx+1]
Fy
Fy <- par[1+Cyrsidx]
par[1+Cnyrs+Cyrsidx]
par[1+Cnyrs+Cyrsidx+1]
par[1+2*Cnyrs+1]
par[1+2*Cnyrs]
par[1+2*Cnyrs+1]
aE <- par[1] # fully exploited age
Fy <- par[1+Cyrsidx]
Ry <- exp(par[1+Cnyrs+Cyrsidx])
alpha <- par[1+2*Cnyrs+1]
beta <- par[1+2*Cnyrs+2]
aE
Fy
Ry
alpha
beta
ls()
aE:Cmaxage
Sa <- vector(NA, Cminage:Cmaxage)
Sa <- vector(NA, Cnages)
Sa
Sa <- vector(, Cnages)
Sa
Sa <- vector('numeric', Cnages)
Sa
aE
Cminage-aE
Cmaxage-aE
aE-Cminage
1:(aE-Cminage)
Sa[1:(aE-Cminage)]
seq(0,1,length=aE-Cminage)
seq(0.1,1,length=aE-Cminage)
c(seq(0.1,1,length=aE-Cminage), rep(1,Cmaxage-aE))
length(c(seq(0.1,1,length=aE-Cminage), rep(1,Cmaxage-aE)))
length(c(seq(0.1,1,length=aE-Cminage), rep(1,Cmaxage-aE+1)))
c(seq(0.1,1,length=aE-Cminage), rep(1,Cmaxage-aE+1))
Sa <- c(seq(0.1,1,length=aE-Cminage), rep(1,Cmaxage-aE+1))
flcini[] <- Sa
Sa <- flcini
Sa
Sa <- c(seq(0.05,1,length=aE-Cminage), rep(1,Cmaxage-aE+1))
flcini[] <- Sa
Sa <- flcini
Iminage=2
Imaxage=8
nbeta(Iminage:Imaxage, alpha, beta)
plot(nbeta(Iminage:Imaxage, alpha, beta))
Q
fobj3 <- function(par, flqini, flcini, Cayobs, Iayobs, May, Cminage, Cmaxage, Cnages, Cnyrs, Cageidx, Cyrsidx, Iminage, Imaxage, Iageidx, Ichtidx) {
aE <- par[1] # fully exploited age
Fy <- par[1+Cyrsidx]
Ry <- exp(par[1+Cnyrs+Cyrsidx])
alpha <- par[1+2*Cnyrs+1]
beta <- par[1+2*Cnyrs+2]
q <- log(par[1+2*Cnyrs+3])
Sa <- c(seq(0.05,1,length=aE-Cminage), rep(1,Cmaxage-aE+1))
flcini[] <- Sa
Sa <- flcini
flqini[1,] <- Fy
Fy <- flqini[rep(1,Cnages)]
Fy <- FLCohort(Fy)@.Data[,,1,1,1,1, drop=TRUE] # <<<=== INEFICIENT
flcini[1,1:(Cnages-1)] <- median(Ry)
flcini[1,Cnages+Cyrsidx-1] <- Ry
Ry <- flcini[rep(1,Cnages),]
qa <- nbeta(Iminage:Imaxage, alpha, beta)*q
flcini <- flcini[Iageidx, Ichtidx]
flcini[] <- qa
qa <- flcini
Fay <- Fy*Sa 
Zay <- Fay+May
Zay[is.na(Zay)] <- 0 # trick to use cumsum which doesn't accept na.rm=T
cumZ <- apply(Zay, 2, cumsum) # <<<=== INEFICIENT 
muay <- Fay/Zay*(1-exp(-Zay))
Cayhat <- Ry[drop=T]*muay[drop=T]*exp(-cumZ)
Iayhat <- qa[drop=T]*((Ry[drop=T]*exp(-cumZ))[Iageidx, Ichtidx])
e1 <- (log(Cayobs[drop=T])-log(Cayhat))^2
e1[is.infinite(e1)] <- NA
e2 <- (log(Iayobs[drop=T])-log(Iayhat))^2
e2[is.infinite(e2)] <- NA
sum(e1, na.rm=T) + sum(e2, na.rm=T)  
}
setMethod("a4a5", c("FLStock", "FLIndex"), 
function(stk, idx, hessian=FALSE) {
# data
cth <- catch.n(stk)
flqini <- FLQuant(NA, dimnames=dimnames(cth))
Cmaxage <- stk@range['max']
Cminage <- stk@range['min'] 
Cnages <- Cmaxage-Cminage+1
Cnyrs <- stk@range['maxyear']-stk@range['minyear']+1
Cageidx <- 1:Cnages
Cyrsidx <- 1:Cnyrs
Cayobs <- FLCohort(cth)
flcini <- FLCohort(NA, dimnames=dimnames(Cayobs))
May <- FLCohort(m(stk))
Iayobs <- FLCohort(index(idx))
Inages <- idx@range['max']-idx@range['min']+1
# To subset the catch matrix matching the index
Cdnms <- dimnames(Cayobs)
Idnms <- dimnames(Iayobs)
Iageidx <- match(Idnms[[1]], Cdnms[[1]])
Ichtidx <- match(Idnms[[2]], Cdnms[[2]])
# starting values
aE <- floor(Cnages/3)
Fyini <- rep(0.5, Cnyrs)
Ryini <- log(cth[1]/(0.1*(1-exp(-1)))) #M0=0.9 F0=0.1
alpha <- floor(Cnages/3)
beta <- floor(Cnages/3)
q <- exp(10e-6)
par <- c(aE, Fyini, Ryini, alpha, beta)
# bounds - WARNING transformation on pars may require adjustement
low <- c(stk@range['min'], rep(1e-10, Cnyrs), log(rep(1e-10, Cnyrs)), stk@range['min'], stk@range['min'])
upp <- c(stk@range['max'], rep(2, Cnyrs), log(rep(Inf, Cnyrs)), stk@range['max'], stk@range['max'])
#ox <- optimx(par, fobj, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Iageidx=Iageidx, Ichtidx=Ichtidx, parscale=rep(1,4), method='nlminb', lower=low, upper=upp, hessian=FALSE, itnmax=1000) 
flcini=flcini@.Data[,,1,1,1,1, drop=TRUE]
Cayobs=Cayobs@.Data[,,1,1,1,1, drop=TRUE]
Iayobs=Iayobs@.Data[,,1,1,1,1, drop=TRUE]
May=May@.Data[,,1,1,1,1, drop=TRUE]
nlminb(par, fobj3, hessian=FALSE, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cminage=Cminage, Cmaxage=Cmaxage, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Imaxage=idx@range['max'], Iminage=idx@range['min'], Iageidx=Iageidx, Ichtidx=Ichtidx, lower=low, upper=upp, control=list(iter.max=10000, eval.max=10000)) 
}
)
setMethod("a4a5", c("FLStock", "FLIndex"), 
function(stk, idx, hessian=FALSE) {
# data
cth <- catch.n(stk)
flqini <- FLQuant(NA, dimnames=dimnames(cth))
Cmaxage <- stk@range['max']
Cminage <- stk@range['min'] 
Cnages <- Cmaxage-Cminage+1
Cnyrs <- stk@range['maxyear']-stk@range['minyear']+1
Cageidx <- 1:Cnages
Cyrsidx <- 1:Cnyrs
Cayobs <- FLCohort(cth)
flcini <- FLCohort(NA, dimnames=dimnames(Cayobs))
May <- FLCohort(m(stk))
Iayobs <- FLCohort(index(idx))
Inages <- idx@range['max']-idx@range['min']+1
# To subset the catch matrix matching the index
Cdnms <- dimnames(Cayobs)
Idnms <- dimnames(Iayobs)
Iageidx <- match(Idnms[[1]], Cdnms[[1]])
Ichtidx <- match(Idnms[[2]], Cdnms[[2]])
# starting values
aE <- floor(Cnages/3)
Fyini <- rep(0.5, Cnyrs)
Ryini <- log(cth[1]/(0.1*(1-exp(-1)))) #M0=0.9 F0=0.1
alpha <- floor(Cnages/3)
beta <- floor(Cnages/3)
q <- exp(10e-6)
par <- c(aE, Fyini, Ryini, alpha, beta)
# bounds - WARNING transformation on pars may require adjustement
low <- c(stk@range['min'], rep(1e-10, Cnyrs), log(rep(1e-10, Cnyrs)), stk@range['min'], stk@range['min'], exp(1e-10))
upp <- c(stk@range['max'], rep(2, Cnyrs), log(rep(Inf, Cnyrs)), stk@range['max'], stk@range['max'], exp(1e-10))
#ox <- optimx(par, fobj, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Iageidx=Iageidx, Ichtidx=Ichtidx, parscale=rep(1,4), method='nlminb', lower=low, upper=upp, hessian=FALSE, itnmax=1000) 
flcini=flcini@.Data[,,1,1,1,1, drop=TRUE]
Cayobs=Cayobs@.Data[,,1,1,1,1, drop=TRUE]
Iayobs=Iayobs@.Data[,,1,1,1,1, drop=TRUE]
May=May@.Data[,,1,1,1,1, drop=TRUE]
nlminb(par, fobj3, hessian=FALSE, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cminage=Cminage, Cmaxage=Cmaxage, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Imaxage=idx@range['max'], Iminage=idx@range['min'], Iageidx=Iageidx, Ichtidx=Ichtidx, lower=low, upper=upp, control=list(iter.max=10000, eval.max=10000)) 
}
)
debug(fobj3)
a4a5(stck,tun[[2]])
n
Sa
qa
nbeta(Iminage:Imaxage, alpha, beta) * q
Iminage
Imaxage
Q
tun[[2]]
tun[[1]]
tun[[2]]
a4a5(stck,tun[[2]])
alpha
beta
Iminage:Imaxage
alpha
beta
nbeta(Iminage:Imaxage, alpha, beta)
nbeta(0.1, alpha, beta)
nbeta(0.0001, alpha, beta)
nbeta(2, alpha, beta)
Imaxage=0
Iminage=0
Imaxage==Iminage==0
Imaxage==Iminage
Imaxage==0 & Iminage==0
Imaxage <- Iminage <- 0.1
Imaxage
Iminage
Q
fobj3 <- function(par, flqini, flcini, Cayobs, Iayobs, May, Cminage, Cmaxage, Cnages, Cnyrs, Cageidx, Cyrsidx, Iminage, Imaxage, Iageidx, Ichtidx) {
aE <- par[1] # fully exploited age
Fy <- par[1+Cyrsidx]
Ry <- exp(par[1+Cnyrs+Cyrsidx])
alpha <- par[1+2*Cnyrs+1]
beta <- par[1+2*Cnyrs+2]
q <- log(par[1+2*Cnyrs+3])
Sa <- c(seq(0.05,1,length=aE-Cminage), rep(1,Cmaxage-aE+1))
flcini[] <- Sa
Sa <- flcini
flqini[1,] <- Fy
Fy <- flqini[rep(1,Cnages)]
Fy <- FLCohort(Fy)@.Data[,,1,1,1,1, drop=TRUE] # <<<=== INEFICIENT
flcini[1,1:(Cnages-1)] <- median(Ry)
flcini[1,Cnages+Cyrsidx-1] <- Ry
Ry <- flcini[rep(1,Cnages),]
qa <- nbeta(Iminage:Imaxage, alpha, beta)*q
flcini <- flcini[Iageidx, Ichtidx]
flcini[] <- qa
qa <- flcini
Fay <- Fy*Sa 
Zay <- Fay+May
Zay[is.na(Zay)] <- 0 # trick to use cumsum which doesn't accept na.rm=T
cumZ <- apply(Zay, 2, cumsum) # <<<=== INEFICIENT 
muay <- Fay/Zay*(1-exp(-Zay))
Cayhat <- Ry[drop=T]*muay[drop=T]*exp(-cumZ)
Iayhat <- qa[drop=T]*((Ry[drop=T]*exp(-cumZ))[Iageidx, Ichtidx])
e1 <- (log(Cayobs[drop=T])-log(Cayhat))^2
e1[is.infinite(e1)] <- NA
e2 <- (log(Iayobs[drop=T])-log(Iayhat))^2
e2[is.infinite(e2)] <- NA
sum(e1, na.rm=T) + sum(e2, na.rm=T)  
}
#)
setMethod("a4a5", c("FLStock", "FLIndex"), 
function(stk, idx, hessian=FALSE) {
# data
cth <- catch.n(stk)
flqini <- FLQuant(NA, dimnames=dimnames(cth))
Cmaxage <- stk@range['max']
Cminage <- stk@range['min'] 
Cnages <- Cmaxage-Cminage+1
Cnyrs <- stk@range['maxyear']-stk@range['minyear']+1
Cageidx <- 1:Cnages
Cyrsidx <- 1:Cnyrs
Cayobs <- FLCohort(cth)
flcini <- FLCohort(NA, dimnames=dimnames(Cayobs))
May <- FLCohort(m(stk))
Iayobs <- FLCohort(index(idx))
Imaxage <- idx@range['max'] 
Iminage <- idx@range['min']
# recruitment indices make a mess with nbeta 0/0 so
if(Imaxage==0 & Iminage==0) Imaxage <- Iminage <- 0.1 
Inages <- idx@range['max']-idx@range['min']+1
# To subset the catch matrix matching the index
Cdnms <- dimnames(Cayobs)
Idnms <- dimnames(Iayobs)
Iageidx <- match(Idnms[[1]], Cdnms[[1]])
Ichtidx <- match(Idnms[[2]], Cdnms[[2]])
# starting values
aE <- floor(Cnages/3)
Fyini <- rep(0.5, Cnyrs)
Ryini <- log(cth[1]/(0.1*(1-exp(-1)))) #M0=0.9 F0=0.1
alpha <- floor(Cnages/3)
beta <- floor(Cnages/3)
q <- exp(10e-6)
par <- c(aE, Fyini, Ryini, alpha, beta)
# bounds - WARNING transformation on pars may require adjustement
low <- c(stk@range['min'], rep(1e-10, Cnyrs), log(rep(1e-10, Cnyrs)), stk@range['min'], stk@range['min'], exp(1e-10))
upp <- c(stk@range['max'], rep(2, Cnyrs), log(rep(Inf, Cnyrs)), stk@range['max'], stk@range['max'], exp(1e-10))
#ox <- optimx(par, fobj, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Iageidx=Iageidx, Ichtidx=Ichtidx, parscale=rep(1,4), method='nlminb', lower=low, upper=upp, hessian=FALSE, itnmax=1000) 
flcini=flcini@.Data[,,1,1,1,1, drop=TRUE]
Cayobs=Cayobs@.Data[,,1,1,1,1, drop=TRUE]
Iayobs=Iayobs@.Data[,,1,1,1,1, drop=TRUE]
May=May@.Data[,,1,1,1,1, drop=TRUE]
nlminb(par, fobj3, hessian=FALSE, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cminage=Cminage, Cmaxage=Cmaxage, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Imaxage=Imaxage, Iminage=Iminage, Iageidx=Iageidx, Ichtidx=Ichtidx, lower=low, upper=upp, control=list(iter.max=10000, eval.max=10000)) 
}
)
a4a5(stck,tun[[2]])
debug(fobj3)
a4a5(stck,tun[[2]])
n
qa
nbeta(Iminage:Imaxage, alpha, beta)
nbeta(Iminage:Imaxage, alpha, beta) * q
q
Q
setMethod("a4a5", c("FLStock", "FLIndex"), 
function(stk, idx, hessian=FALSE) {
# data
cth <- catch.n(stk)
flqini <- FLQuant(NA, dimnames=dimnames(cth))
Cmaxage <- stk@range['max']
Cminage <- stk@range['min'] 
Cnages <- Cmaxage-Cminage+1
Cnyrs <- stk@range['maxyear']-stk@range['minyear']+1
Cageidx <- 1:Cnages
Cyrsidx <- 1:Cnyrs
Cayobs <- FLCohort(cth)
flcini <- FLCohort(NA, dimnames=dimnames(Cayobs))
May <- FLCohort(m(stk))
Iayobs <- FLCohort(index(idx))
Imaxage <- idx@range['max'] 
Iminage <- idx@range['min']
# recruitment indices make a mess with nbeta 0/0 so
if(Imaxage==0 & Iminage==0) Imaxage <- Iminage <- 0.1 
Inages <- idx@range['max']-idx@range['min']+1
# To subset the catch matrix matching the index
Cdnms <- dimnames(Cayobs)
Idnms <- dimnames(Iayobs)
Iageidx <- match(Idnms[[1]], Cdnms[[1]])
Ichtidx <- match(Idnms[[2]], Cdnms[[2]])
# starting values
aE <- floor(Cnages/3)
Fyini <- rep(0.5, Cnyrs)
Ryini <- log(cth[1]/(0.1*(1-exp(-1)))) #M0=0.9 F0=0.1
alpha <- floor(Cnages/3)
beta <- floor(Cnages/3)
q <- exp(10e-6)
par <- c(aE, Fyini, Ryini, alpha, beta, q)
# bounds - WARNING transformation on pars may require adjustement
low <- c(stk@range['min'], rep(1e-10, Cnyrs), log(rep(1e-10, Cnyrs)), stk@range['min'], stk@range['min'], exp(1e-10))
upp <- c(stk@range['max'], rep(2, Cnyrs), log(rep(Inf, Cnyrs)), stk@range['max'], stk@range['max'], exp(1e-10))
#ox <- optimx(par, fobj, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Iageidx=Iageidx, Ichtidx=Ichtidx, parscale=rep(1,4), method='nlminb', lower=low, upper=upp, hessian=FALSE, itnmax=1000) 
flcini=flcini@.Data[,,1,1,1,1, drop=TRUE]
Cayobs=Cayobs@.Data[,,1,1,1,1, drop=TRUE]
Iayobs=Iayobs@.Data[,,1,1,1,1, drop=TRUE]
May=May@.Data[,,1,1,1,1, drop=TRUE]
nlminb(par, fobj3, hessian=FALSE, flqini=flqini, flcini=flcini, Cayobs=Cayobs, Iayobs=Iayobs, May=May, Cminage=Cminage, Cmaxage=Cmaxage, Cnages=Cnages, Cnyrs=Cnyrs, Cageidx=Cageidx, Cyrsidx=Cyrsidx, Imaxage=Imaxage, Iminage=Iminage, Iageidx=Iageidx, Ichtidx=Ichtidx, lower=low, upper=upp, control=list(iter.max=10000, eval.max=10000)) 
}
)
a4a5(stck,tun[[2]])
n
qa
Iayhat
Iayobs
Cayobs
sum(e1, na.rm = T) + sum(e2, na.rm = T)
Q
nsh3
nsh3.mod5 <- a4a5(stck,tun[[3]])
Q
fobj3 <- function(par, flqini, flcini, Cayobs, Iayobs, May, Cminage, Cmaxage, Cnages, Cnyrs, Cageidx, Cyrsidx, Iminage, Imaxage, Iageidx, Ichtidx) {
aE <- par[1] # fully exploited age
Fy <- par[1+Cyrsidx]
Ry <- exp(par[1+Cnyrs+Cyrsidx])
alpha <- par[1+2*Cnyrs+1]
beta <- par[1+2*Cnyrs+2]
q <- log(par[1+2*Cnyrs+3])
Sa <- c(seq(0.05,1,length=aE-Cminage), rep(1,Cmaxage-aE+1))
flcini[] <- Sa
Sa <- flcini
flqini[1,] <- Fy
Fy <- flqini[rep(1,Cnages)]
Fy <- FLCohort(Fy)@.Data[,,1,1,1,1, drop=TRUE] # <<<=== INEFICIENT
flcini[1,1:(Cnages-1)] <- median(Ry)
flcini[1,Cnages+Cyrsidx-1] <- Ry
Ry <- flcini[rep(1,Cnages),]
qa <- nbeta(Iminage:Imaxage, alpha, beta)*q
flcini <- flcini[Iageidx, Ichtidx]
flcini[] <- qa
qa <- flcini
Fay <- Fy*Sa 
Zay <- Fay+May
Zay[is.na(Zay)] <- 0 # trick to use cumsum which doesn't accept na.rm=T
cumZ <- apply(Zay, 2, cumsum) # <<<=== INEFICIENT 
muay <- Fay/Zay*(1-exp(-Zay))
Cayhat <- Ry[drop=T]*muay[drop=T]*exp(-cumZ)
Iayhat <- qa[drop=T]*((Ry[drop=T]*exp(-cumZ))[Iageidx, Ichtidx])
e1 <- (log(Cayobs[drop=T])-log(Cayhat))^2
e1[is.infinite(e1)] <- NA
e2 <- (log(Iayobs[drop=T])-log(Iayhat))^2
e2[is.infinite(e2)] <- NA
sum(e1, na.rm=T) + sum(e2, na.rm=T)  
}
#)
nsh3.mod5 <- a4a5(stck,tun[[3]])
nsh3.mod5
q()
exp(1e-10)
exp(0.1)
exp(1)
exp(-lambda*qa)
qa <- 2:6
lambda=0.5
exp(-lambda*qa)
plot(exp(-lambda*qa))
qa <- 0:15
plot(exp(-lambda*qa))
lambda=1
plot(exp(-lambda*qa))
lambda=0.1
plot(exp(-lambda*qa))
source('a4a7.R')
library(FLCore)
source('a4a7.R')
library(optimx)
library(lattice)
library(FLSAM)
data(NSH)
stck <- NSH
tun  <- NSH.tun
data(NSH.sam)
nsh3.mod7 <- a4a7(stck,tun[[3]])
nsh3.mod7
1e-10
log(1)
log(1e-10)
exp(0.4)
exp(0.6)
0.4^2
0.6^2
exp(1e-15)
exp(1e-10)
exp(1e-5)
1
10
exp(1e-5)
1e-15
1-exp(1e-5)
exp(1e-5)-1
exp(1e-15)-1
log(1)
log(1.1)
log(10)
log(10000)
log(10)/10
log(10000)/10
0.1*log(100000)
10
100000
1/100000
1/10
0.1/100000
0.01/100000
0.001/100000
0.001/10
1/1000
0.1*log(10)
0.1*log(0.001)
0.1*log(1e-4)
0.1*log(1e-8)
-0.1*log(1e-8)
-0.1*log(1e-10)
-0.1*log(1e-4)
-0.1*log(1)
-0.1*log(1.1)
-0.1*log(0.9)
-0.1*log(1e-15)
exp(-10*3.453878)
-0.1*log(1e-5)
log(0.01)
log(2)
sqrt(0.01)
sqrt(2)
0.01
2
source('a4a7.R')
nsh3.mod7 <- a4a7(stck,tun[[3]])
nsh3.mod7
?nlminb
?optimx
q()
